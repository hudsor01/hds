/******************************************************************************
 * This file was generated by ZenStack CLI.
 ******************************************************************************/

/* eslint-disable */
// @ts-nocheck

const metadata = {
    models: {
        users: {
            name: 'users',
            fields: {
                id: {
                    name: 'id',
                    type: 'String',
                    isId: true,
                    attributes: [{ name: '@default', args: [] }]
                },
                clerkId: {
                    name: 'clerkId',
                    type: 'String'
                },
                role: {
                    name: 'role',
                    type: 'String',
                    attributes: [
                        {
                            name: '@default',
                            args: [{ value: 'USER' }]
                        }
                    ]
                },
                name: {
                    name: 'name',
                    type: 'String',
                    isOptional: true
                },
                email: {
                    name: 'email',
                    type: 'String'
                },
                image: {
                    name: 'image',
                    type: 'String',
                    isOptional: true
                },
                created_at: {
                    name: 'created_at',
                    type: 'DateTime',
                    attributes: [{ name: '@default', args: [] }]
                },
                updated_at: {
                    name: 'updated_at',
                    type: 'DateTime',
                    attributes: [{ name: '@default', args: [] }]
                },
                deleted_at: {
                    name: 'deleted_at',
                    type: 'DateTime',
                    isOptional: true
                },
                stripe_customer_id: {
                    name: 'stripe_customer_id',
                    type: 'String',
                    isOptional: true
                },
                subscription_status: {
                    name: 'subscription_status',
                    type: 'String',
                    isOptional: true,
                    attributes: [
                        {
                            name: '@default',
                            args: [{ value: 'inactive' }]
                        }
                    ]
                },
                sessions: {
                    name: 'sessions',
                    type: 'session',
                    isDataModel: true,
                    isArray: true,
                    backLink: 'users'
                },
                audit_logs: {
                    name: 'audit_logs',
                    type: 'public_audit_logs',
                    isDataModel: true,
                    isArray: true,
                    backLink: 'users'
                },
                email_addresses: {
                    name: 'email_addresses',
                    type: 'email_addresses',
                    isDataModel: true,
                    isArray: true,
                    backLink: 'users'
                },
                inspections: {
                    name: 'inspections',
                    type: 'inspections',
                    isDataModel: true,
                    isArray: true,
                    backLink: 'user'
                },
                invoices: {
                    name: 'invoices',
                    type: 'invoices',
                    isDataModel: true,
                    isArray: true,
                    backLink: 'users'
                },
                maintenance_requests: {
                    name: 'maintenance_requests',
                    type: 'maintenance_requests',
                    isDataModel: true,
                    isArray: true,
                    backLink: 'user'
                },
                payment_methods: {
                    name: 'payment_methods',
                    type: 'payment_methods',
                    isDataModel: true,
                    isArray: true,
                    backLink: 'users'
                },
                payments: {
                    name: 'payments',
                    type: 'payments',
                    isDataModel: true,
                    isArray: true,
                    backLink: 'user'
                },
                properties: {
                    name: 'properties',
                    type: 'properties',
                    isDataModel: true,
                    isArray: true,
                    backLink: 'User'
                },
                tenants: {
                    name: 'tenants',
                    type: 'tenants',
                    isDataModel: true,
                    isArray: true,
                    backLink: 'User'
                },
                transactions: {
                    name: 'transactions',
                    type: 'transactions',
                    isDataModel: true,
                    isArray: true,
                    backLink: 'users'
                },
                vendors: {
                    name: 'vendors',
                    type: 'vendors',
                    isDataModel: true,
                    isArray: true,
                    backLink: 'user'
                },
                work_orders: {
                    name: 'work_orders',
                    type: 'work_orders',
                    isDataModel: true,
                    isArray: true,
                    backLink: 'user'
                }
            },
            uniqueConstraints: {
                id: {
                    name: 'id',
                    fields: ['id']
                },
                clerkId: {
                    name: 'clerkId',
                    fields: ['clerkId']
                },
                email: {
                    name: 'email',
                    fields: ['email']
                }
            }
        },
        properties: {
            name: 'properties',
            fields: {
                id: {
                    name: 'id',
                    type: 'String',
                    isId: true,
                    attributes: [{ name: '@default', args: [] }]
                },
                name: {
                    name: 'name',
                    type: 'String'
                },
                address: {
                    name: 'address',
                    type: 'String'
                },
                city: {
                    name: 'city',
                    type: 'String'
                },
                state: {
                    name: 'state',
                    type: 'String'
                },
                zip: {
                    name: 'zip',
                    type: 'String'
                },
                property_status: {
                    name: 'property_status',
                    type: 'String',
                    attributes: [
                        {
                            name: '@default',
                            args: [{ value: 'active' }]
                        }
                    ]
                },
                created_at: {
                    name: 'created_at',
                    type: 'DateTime',
                    attributes: [{ name: '@default', args: [] }]
                },
                updated_at: {
                    name: 'updated_at',
                    type: 'DateTime',
                    attributes: [{ name: '@default', args: [] }]
                },
                property_type: {
                    name: 'property_type',
                    type: 'String',
                    attributes: [
                        {
                            name: '@default',
                            args: [{ value: 'Residential' }]
                        }
                    ]
                },
                rent_amount: {
                    name: 'rent_amount',
                    type: 'Decimal'
                },
                user_id: {
                    name: 'user_id',
                    type: 'String',
                    isForeignKey: true,
                    relationField: 'User'
                },
                inspections: {
                    name: 'inspections',
                    type: 'inspections',
                    isDataModel: true,
                    isArray: true,
                    backLink: 'property'
                },
                leases: {
                    name: 'leases',
                    type: 'leases',
                    isDataModel: true,
                    isArray: true,
                    backLink: 'property'
                },
                maintenance_requests: {
                    name: 'maintenance_requests',
                    type: 'maintenance_requests',
                    isDataModel: true,
                    isArray: true,
                    backLink: 'property'
                },
                payments: {
                    name: 'payments',
                    type: 'payments',
                    isDataModel: true,
                    isArray: true,
                    backLink: 'property'
                },
                User: {
                    name: 'User',
                    type: 'users',
                    isDataModel: true,
                    backLink: 'properties',
                    isRelationOwner: true,
                    foreignKeyMapping: { id: 'user_id' }
                },
                tenants: {
                    name: 'tenants',
                    type: 'tenants',
                    isDataModel: true,
                    isArray: true,
                    backLink: 'property'
                },
                units: {
                    name: 'units',
                    type: 'units',
                    isDataModel: true,
                    isArray: true,
                    backLink: 'properties'
                },
                work_orders: {
                    name: 'work_orders',
                    type: 'work_orders',
                    isDataModel: true,
                    isArray: true,
                    backLink: 'property'
                }
            },
            uniqueConstraints: {
                id: {
                    name: 'id',
                    fields: ['id']
                }
            }
        },
        maintenance_requests: {
            name: 'maintenance_requests',
            fields: {
                id: {
                    name: 'id',
                    type: 'String',
                    isId: true,
                    attributes: [{ name: '@default', args: [] }]
                },
                title: {
                    name: 'title',
                    type: 'String'
                },
                description: {
                    name: 'description',
                    type: 'String'
                },
                priority: {
                    name: 'priority',
                    type: 'String',
                    attributes: [
                        { name: '@default', args: [{ value: 'LOW' }] }
                    ]
                },
                created_at: {
                    name: 'created_at',
                    type: 'DateTime',
                    attributes: [{ name: '@default', args: [] }]
                },
                updated_at: {
                    name: 'updated_at',
                    type: 'DateTime',
                    attributes: [{ name: '@default', args: [] }]
                },
                property_id: {
                    name: 'property_id',
                    type: 'String',
                    isForeignKey: true,
                    relationField: 'property'
                },
                user_id: {
                    name: 'user_id',
                    type: 'String',
                    isForeignKey: true,
                    relationField: 'user'
                },
                property: {
                    name: 'property',
                    type: 'properties',
                    isDataModel: true,
                    backLink: 'maintenance_requests',
                    isRelationOwner: true,
                    foreignKeyMapping: { id: 'property_id' }
                },
                user: {
                    name: 'user',
                    type: 'users',
                    isDataModel: true,
                    backLink: 'maintenance_requests',
                    isRelationOwner: true,
                    foreignKeyMapping: { id: 'user_id' }
                }
            },
            uniqueConstraints: {
                id: {
                    name: 'id',
                    fields: ['id']
                }
            }
        },
        tenants: {
            name: 'tenants',
            fields: {
                id: {
                    name: 'id',
                    type: 'String',
                    isId: true,
                    attributes: [{ name: '@default', args: [] }]
                },
                property_id: {
                    name: 'property_id',
                    type: 'String',
                    isForeignKey: true,
                    relationField: 'property'
                },
                first_name: {
                    name: 'first_name',
                    type: 'String'
                },
                last_name: {
                    name: 'last_name',
                    type: 'String'
                },
                email: {
                    name: 'email',
                    type: 'String'
                },
                phone: {
                    name: 'phone',
                    type: 'String',
                    isOptional: true
                },
                tenant_status: {
                    name: 'tenant_status',
                    type: 'String',
                    attributes: [
                        {
                            name: '@default',
                            args: [{ value: 'active' }]
                        }
                    ]
                },
                move_in_date: {
                    name: 'move_in_date',
                    type: 'DateTime',
                    isOptional: true
                },
                move_out_date: {
                    name: 'move_out_date',
                    type: 'DateTime',
                    isOptional: true
                },
                emergency_contact: {
                    name: 'emergency_contact',
                    type: 'Json',
                    isOptional: true,
                    attributes: [
                        { name: '@default', args: [{ value: '{}' }] }
                    ]
                },
                documents: {
                    name: 'documents',
                    type: 'Json',
                    isArray: true,
                    attributes: [{ name: '@default', args: [] }]
                },
                created_at: {
                    name: 'created_at',
                    type: 'DateTime',
                    attributes: [{ name: '@default', args: [] }]
                },
                updated_at: {
                    name: 'updated_at',
                    type: 'DateTime',
                    attributes: [{ name: '@default', args: [] }]
                },
                user_id: {
                    name: 'user_id',
                    type: 'String',
                    isForeignKey: true,
                    relationField: 'User'
                },
                payments: {
                    name: 'payments',
                    type: 'payments',
                    isDataModel: true,
                    isArray: true,
                    backLink: 'tenant'
                },
                property: {
                    name: 'property',
                    type: 'properties',
                    isDataModel: true,
                    backLink: 'tenants',
                    isRelationOwner: true,
                    foreignKeyMapping: { id: 'property_id' }
                },
                User: {
                    name: 'User',
                    type: 'users',
                    isDataModel: true,
                    backLink: 'tenants',
                    isRelationOwner: true,
                    foreignKeyMapping: { id: 'user_id' }
                }
            },
            uniqueConstraints: {
                id: {
                    name: 'id',
                    fields: ['id']
                }
            }
        },
        accounts: {
            name: 'accounts',
            fields: {
                id: {
                    name: 'id',
                    type: 'String',
                    isId: true
                },
                user_id: {
                    name: 'user_id',
                    type: 'String'
                },
                account_type: {
                    name: 'account_type',
                    type: 'String'
                },
                provider: {
                    name: 'provider',
                    type: 'String'
                },
                provider_account_id: {
                    name: 'provider_account_id',
                    type: 'String'
                },
                refresh_token: {
                    name: 'refresh_token',
                    type: 'String',
                    isOptional: true
                },
                access_token: {
                    name: 'access_token',
                    type: 'String',
                    isOptional: true
                },
                expires_at: {
                    name: 'expires_at',
                    type: 'Int',
                    isOptional: true
                },
                token_type: {
                    name: 'token_type',
                    type: 'String',
                    isOptional: true
                },
                scope: {
                    name: 'scope',
                    type: 'String',
                    isOptional: true
                },
                id_token: {
                    name: 'id_token',
                    type: 'String',
                    isOptional: true
                },
                session_state: {
                    name: 'session_state',
                    type: 'String',
                    isOptional: true
                }
            },
            uniqueConstraints: {
                id: {
                    name: 'id',
                    fields: ['id']
                },
                provider_provider_account_id: {
                    name: 'provider_provider_account_id',
                    fields: ['provider', 'provider_account_id']
                }
            }
        },
        documents: {
            name: 'documents',
            fields: {
                id: {
                    name: 'id',
                    type: 'String',
                    isId: true,
                    attributes: [{ name: '@default', args: [] }]
                },
                name: {
                    name: 'name',
                    type: 'String'
                },
                description: {
                    name: 'description',
                    type: 'String',
                    isOptional: true
                },
                url: {
                    name: 'url',
                    type: 'String'
                },
                type: {
                    name: 'type',
                    type: 'String'
                },
                size: {
                    name: 'size',
                    type: 'BigInt',
                    isOptional: true
                },
                property_id: {
                    name: 'property_id',
                    type: 'String',
                    isOptional: true
                },
                lease_id: {
                    name: 'lease_id',
                    type: 'String',
                    isOptional: true
                },
                uploaded_by: {
                    name: 'uploaded_by',
                    type: 'String'
                },
                created_at: {
                    name: 'created_at',
                    type: 'DateTime',
                    isOptional: true,
                    attributes: [{ name: '@default', args: [] }]
                },
                updated_at: {
                    name: 'updated_at',
                    type: 'DateTime',
                    isOptional: true,
                    attributes: [{ name: '@default', args: [] }]
                }
            },
            uniqueConstraints: {
                id: {
                    name: 'id',
                    fields: ['id']
                }
            }
        },
        email_templates: {
            name: 'email_templates',
            fields: {
                id: {
                    name: 'id',
                    type: 'String',
                    isId: true,
                    attributes: [{ name: '@default', args: [] }]
                },
                name: {
                    name: 'name',
                    type: 'String'
                },
                subject: {
                    name: 'subject',
                    type: 'String'
                },
                body: {
                    name: 'body',
                    type: 'String'
                },
                content: {
                    name: 'content',
                    type: 'String'
                },
                variables: {
                    name: 'variables',
                    type: 'Json',
                    isOptional: true,
                    attributes: [
                        { name: '@default', args: [{ value: '{}' }] }
                    ]
                },
                is_active: {
                    name: 'is_active',
                    type: 'Boolean',
                    isOptional: true,
                    attributes: [
                        { name: '@default', args: [{ value: true }] }
                    ]
                },
                created_by: {
                    name: 'created_by',
                    type: 'String'
                },
                updated_by: {
                    name: 'updated_by',
                    type: 'String'
                },
                created_at: {
                    name: 'created_at',
                    type: 'DateTime',
                    isOptional: true,
                    attributes: [{ name: '@default', args: [] }]
                },
                updated_at: {
                    name: 'updated_at',
                    type: 'DateTime',
                    isOptional: true,
                    attributes: [{ name: '@default', args: [] }]
                }
            },
            uniqueConstraints: {
                id: {
                    name: 'id',
                    fields: ['id']
                }
            }
        },
        expenses: {
            name: 'expenses',
            fields: {
                id: {
                    name: 'id',
                    type: 'String',
                    isId: true,
                    attributes: [{ name: '@default', args: [] }]
                },
                property_id: {
                    name: 'property_id',
                    type: 'String'
                },
                tenant_id: {
                    name: 'tenant_id',
                    type: 'String',
                    isOptional: true
                },
                category: {
                    name: 'category',
                    type: 'String'
                },
                amount: {
                    name: 'amount',
                    type: 'Decimal'
                },
                description: {
                    name: 'description',
                    type: 'String',
                    isOptional: true
                },
                date: {
                    name: 'date',
                    type: 'DateTime'
                },
                receipt_url: {
                    name: 'receipt_url',
                    type: 'String',
                    isOptional: true
                },
                created_by: {
                    name: 'created_by',
                    type: 'String',
                    isOptional: true
                },
                created_at: {
                    name: 'created_at',
                    type: 'DateTime',
                    isOptional: true,
                    attributes: [{ name: '@default', args: [] }]
                },
                updated_at: {
                    name: 'updated_at',
                    type: 'DateTime',
                    isOptional: true,
                    attributes: [{ name: '@default', args: [] }]
                }
            },
            uniqueConstraints: {
                id: {
                    name: 'id',
                    fields: ['id']
                }
            }
        },
        ip_blacklist: {
            name: 'ip_blacklist',
            fields: {
                id: {
                    name: 'id',
                    type: 'String',
                    isId: true,
                    attributes: [{ name: '@default', args: [] }]
                },
                ip_address: {
                    name: 'ip_address',
                    type: 'String'
                },
                reason: {
                    name: 'reason',
                    type: 'String'
                },
                added_by: {
                    name: 'added_by',
                    type: 'String',
                    isOptional: true
                },
                expires_at: {
                    name: 'expires_at',
                    type: 'DateTime',
                    isOptional: true
                },
                created_at: {
                    name: 'created_at',
                    type: 'DateTime',
                    isOptional: true,
                    attributes: [{ name: '@default', args: [] }]
                }
            },
            uniqueConstraints: {
                id: {
                    name: 'id',
                    fields: ['id']
                },
                ip_address: {
                    name: 'ip_address',
                    fields: ['ip_address']
                }
            }
        },
        leases: {
            name: 'leases',
            fields: {
                user_id: {
                    name: 'user_id',
                    type: 'String',
                    isId: true,
                    attributes: [{ name: '@default', args: [] }]
                },
                tenant_id: {
                    name: 'tenant_id',
                    type: 'String'
                },
                property_id: {
                    name: 'property_id',
                    type: 'String',
                    isForeignKey: true,
                    relationField: 'property'
                },
                lease_type: {
                    name: 'lease_type',
                    type: 'LeaseType'
                },
                start_date: {
                    name: 'start_date',
                    type: 'DateTime'
                },
                end_date: {
                    name: 'end_date',
                    type: 'DateTime',
                    isOptional: true
                },
                rent_amount: {
                    name: 'rent_amount',
                    type: 'Decimal'
                },
                depositAmount: {
                    name: 'depositAmount',
                    type: 'Decimal'
                },
                payment_day: {
                    name: 'payment_day',
                    type: 'Int'
                },
                documents: {
                    name: 'documents',
                    type: 'String',
                    isArray: true
                },
                created_at: {
                    name: 'created_at',
                    type: 'DateTime',
                    attributes: [{ name: '@default', args: [] }]
                },
                lease_status: {
                    name: 'lease_status',
                    type: 'String',
                    isOptional: true,
                    attributes: [
                        {
                            name: '@default',
                            args: [{ value: 'Pending' }]
                        }
                    ]
                },
                property: {
                    name: 'property',
                    type: 'properties',
                    isDataModel: true,
                    backLink: 'leases',
                    isRelationOwner: true,
                    foreignKeyMapping: { id: 'property_id' }
                }
            },
            uniqueConstraints: {
                user_id: {
                    name: 'user_id',
                    fields: ['user_id']
                }
            }
        },
        login_history: {
            name: 'login_history',
            fields: {
                id: {
                    name: 'id',
                    type: 'String',
                    isId: true,
                    attributes: [{ name: '@default', args: [] }]
                },
                user_id: {
                    name: 'user_id',
                    type: 'String',
                    isOptional: true
                },
                ip_address: {
                    name: 'ip_address',
                    type: 'String',
                    isOptional: true
                },
                user_agent: {
                    name: 'user_agent',
                    type: 'String',
                    isOptional: true
                },
                success: {
                    name: 'success',
                    type: 'Boolean',
                    isOptional: true,
                    attributes: [
                        { name: '@default', args: [{ value: true }] }
                    ]
                },
                failure_reason: {
                    name: 'failure_reason',
                    type: 'String',
                    isOptional: true
                },
                created_at: {
                    name: 'created_at',
                    type: 'DateTime',
                    isOptional: true,
                    attributes: [{ name: '@default', args: [] }]
                }
            },
            uniqueConstraints: {
                id: {
                    name: 'id',
                    fields: ['id']
                }
            }
        },
        message_threads: {
            name: 'message_threads',
            fields: {
                id: {
                    name: 'id',
                    type: 'String',
                    isId: true,
                    attributes: [{ name: '@default', args: [] }]
                },
                subject: {
                    name: 'subject',
                    type: 'String'
                },
                last_message_id: {
                    name: 'last_message_id',
                    type: 'String',
                    isOptional: true
                },
                participants: {
                    name: 'participants',
                    type: 'String',
                    isArray: true
                },
                created_at: {
                    name: 'created_at',
                    type: 'DateTime',
                    isOptional: true,
                    attributes: [{ name: '@default', args: [] }]
                },
                updated_at: {
                    name: 'updated_at',
                    type: 'DateTime',
                    isOptional: true,
                    attributes: [{ name: '@default', args: [] }]
                }
            },
            uniqueConstraints: {
                id: {
                    name: 'id',
                    fields: ['id']
                }
            }
        },
        messages: {
            name: 'messages',
            fields: {
                id: {
                    name: 'id',
                    type: 'String',
                    isId: true,
                    attributes: [{ name: '@default', args: [] }]
                },
                sender_id: {
                    name: 'sender_id',
                    type: 'String'
                },
                recipient_id: {
                    name: 'recipient_id',
                    type: 'String'
                },
                subject: {
                    name: 'subject',
                    type: 'String',
                    isOptional: true
                },
                content: {
                    name: 'content',
                    type: 'String'
                },
                read_at: {
                    name: 'read_at',
                    type: 'DateTime',
                    isOptional: true
                },
                attachments: {
                    name: 'attachments',
                    type: 'String',
                    isArray: true,
                    attributes: [{ name: '@default', args: [] }]
                },
                parent_id: {
                    name: 'parent_id',
                    type: 'String',
                    isOptional: true
                },
                thread_id: {
                    name: 'thread_id',
                    type: 'String',
                    isOptional: true
                },
                created_at: {
                    name: 'created_at',
                    type: 'DateTime',
                    isOptional: true,
                    attributes: [{ name: '@default', args: [] }]
                },
                updated_at: {
                    name: 'updated_at',
                    type: 'DateTime',
                    isOptional: true,
                    attributes: [{ name: '@default', args: [] }]
                }
            },
            uniqueConstraints: {
                id: {
                    name: 'id',
                    fields: ['id']
                }
            }
        },
        notifications: {
            name: 'notifications',
            fields: {
                id: {
                    name: 'id',
                    type: 'String',
                    isId: true,
                    attributes: [{ name: '@default', args: [] }]
                },
                user_id: {
                    name: 'user_id',
                    type: 'String'
                },
                type: {
                    name: 'type',
                    type: 'NotificationType'
                },
                title: {
                    name: 'title',
                    type: 'String'
                },
                message: {
                    name: 'message',
                    type: 'String'
                },
                data: {
                    name: 'data',
                    type: 'Json',
                    isOptional: true,
                    attributes: [
                        { name: '@default', args: [{ value: '{}' }] }
                    ]
                },
                read_at: {
                    name: 'read_at',
                    type: 'DateTime',
                    isOptional: true
                },
                created_at: {
                    name: 'created_at',
                    type: 'DateTime',
                    isOptional: true,
                    attributes: [{ name: '@default', args: [] }]
                },
                updated_at: {
                    name: 'updated_at',
                    type: 'DateTime',
                    isOptional: true,
                    attributes: [{ name: '@default', args: [] }]
                }
            },
            uniqueConstraints: {
                id: {
                    name: 'id',
                    fields: ['id']
                }
            }
        },
        organizations: {
            name: 'organizations',
            fields: {
                user_id: {
                    name: 'user_id',
                    type: 'String',
                    isId: true
                },
                name: {
                    name: 'name',
                    type: 'String'
                },
                created_at: {
                    name: 'created_at',
                    type: 'DateTime',
                    isOptional: true,
                    attributes: [{ name: '@default', args: [] }]
                },
                updated_at: {
                    name: 'updated_at',
                    type: 'DateTime',
                    isOptional: true,
                    attributes: [{ name: '@default', args: [] }]
                }
            },
            uniqueConstraints: {
                user_id: {
                    name: 'user_id',
                    fields: ['user_id']
                }
            }
        },
        password_reset_requests: {
            name: 'password_reset_requests',
            fields: {
                id: {
                    name: 'id',
                    type: 'String',
                    isId: true,
                    attributes: [{ name: '@default', args: [] }]
                },
                user_id: {
                    name: 'user_id',
                    type: 'String',
                    isOptional: true
                },
                token: {
                    name: 'token',
                    type: 'String'
                },
                expires_at: {
                    name: 'expires_at',
                    type: 'DateTime'
                },
                used_at: {
                    name: 'used_at',
                    type: 'DateTime',
                    isOptional: true
                },
                created_at: {
                    name: 'created_at',
                    type: 'DateTime',
                    isOptional: true,
                    attributes: [{ name: '@default', args: [] }]
                }
            },
            uniqueConstraints: {
                id: {
                    name: 'id',
                    fields: ['id']
                }
            }
        },
        payments: {
            name: 'payments',
            fields: {
                id: {
                    name: 'id',
                    type: 'String',
                    isId: true,
                    attributes: [{ name: '@default', args: [] }]
                },
                tenant_id: {
                    name: 'tenant_id',
                    type: 'String',
                    isForeignKey: true,
                    relationField: 'tenant'
                },
                property_id: {
                    name: 'property_id',
                    type: 'String',
                    isForeignKey: true,
                    relationField: 'property'
                },
                payment_amount: {
                    name: 'payment_amount',
                    type: 'Decimal'
                },
                payment_status: {
                    name: 'payment_status',
                    type: 'String',
                    attributes: [
                        {
                            name: '@default',
                            args: [{ value: 'PENDING' }]
                        }
                    ]
                },
                payment_type: {
                    name: 'payment_type',
                    type: 'String'
                },
                payment_method: {
                    name: 'payment_method',
                    type: 'String'
                },
                payment_date: {
                    name: 'payment_date',
                    type: 'DateTime'
                },
                payment_notes: {
                    name: 'payment_notes',
                    type: 'String',
                    isOptional: true
                },
                created_at: {
                    name: 'created_at',
                    type: 'DateTime',
                    attributes: [{ name: '@default', args: [] }]
                },
                updated_at: {
                    name: 'updated_at',
                    type: 'DateTime',
                    attributes: [{ name: '@default', args: [] }]
                },
                user_id: {
                    name: 'user_id',
                    type: 'String',
                    isForeignKey: true,
                    relationField: 'user'
                },
                property: {
                    name: 'property',
                    type: 'properties',
                    isDataModel: true,
                    backLink: 'payments',
                    isRelationOwner: true,
                    foreignKeyMapping: { id: 'property_id' }
                },
                tenant: {
                    name: 'tenant',
                    type: 'tenants',
                    isDataModel: true,
                    backLink: 'payments',
                    isRelationOwner: true,
                    foreignKeyMapping: { id: 'tenant_id' }
                },
                user: {
                    name: 'user',
                    type: 'users',
                    isDataModel: true,
                    backLink: 'payments',
                    isRelationOwner: true,
                    foreignKeyMapping: { id: 'user_id' }
                }
            },
            uniqueConstraints: {
                id: {
                    name: 'id',
                    fields: ['id']
                }
            }
        },
        profiles: {
            name: 'profiles',
            fields: {
                user_id: {
                    name: 'user_id',
                    type: 'String',
                    isId: true
                }
            },
            uniqueConstraints: {
                user_id: {
                    name: 'user_id',
                    fields: ['user_id']
                }
            }
        },
        rent_payment: {
            name: 'rent_payment',
            fields: {
                id: {
                    name: 'id',
                    type: 'String',
                    isId: true,
                    attributes: [{ name: '@default', args: [] }]
                },
                property_id: {
                    name: 'property_id',
                    type: 'String'
                },
                tenant_id: {
                    name: 'tenant_id',
                    type: 'String'
                },
                payment_amount: {
                    name: 'payment_amount',
                    type: 'Decimal'
                },
                due_date: {
                    name: 'due_date',
                    type: 'DateTime'
                },
                paid_date: {
                    name: 'paid_date',
                    type: 'DateTime',
                    isOptional: true
                },
                payment_status: {
                    name: 'payment_status',
                    type: 'String',
                    attributes: [
                        {
                            name: '@default',
                            args: [{ value: 'pending' }]
                        }
                    ]
                },
                PaymentMethod: {
                    name: 'PaymentMethod',
                    type: 'String',
                    isOptional: true
                },
                invoice_number: {
                    name: 'invoice_number',
                    type: 'String',
                    isOptional: true
                },
                transaction_id: {
                    name: 'transaction_id',
                    type: 'String',
                    isOptional: true
                },
                late_fee: {
                    name: 'late_fee',
                    type: 'Decimal',
                    isOptional: true,
                    attributes: [
                        { name: '@default', args: [{ value: 0 }] }
                    ]
                },
                notes: {
                    name: 'notes',
                    type: 'String',
                    isOptional: true
                },
                created_at: {
                    name: 'created_at',
                    type: 'DateTime',
                    isOptional: true,
                    attributes: [{ name: '@default', args: [] }]
                },
                updated_at: {
                    name: 'updated_at',
                    type: 'DateTime',
                    isOptional: true,
                    attributes: [{ name: '@default', args: [] }]
                }
            },
            uniqueConstraints: {
                id: {
                    name: 'id',
                    fields: ['id']
                }
            }
        },
        security_audit_log: {
            name: 'security_audit_log',
            fields: {
                id: {
                    name: 'id',
                    type: 'String',
                    isId: true,
                    attributes: [{ name: '@default', args: [] }]
                },
                user_id: {
                    name: 'user_id',
                    type: 'String',
                    isOptional: true
                },
                event_type: {
                    name: 'event_type',
                    type: 'String'
                },
                resource_type: {
                    name: 'resource_type',
                    type: 'String'
                },
                resource_id: {
                    name: 'resource_id',
                    type: 'String',
                    isOptional: true
                },
                ip_address: {
                    name: 'ip_address',
                    type: 'String',
                    isOptional: true
                },
                user_agent: {
                    name: 'user_agent',
                    type: 'String',
                    isOptional: true
                },
                old_values: {
                    name: 'old_values',
                    type: 'Json',
                    isOptional: true
                },
                new_values: {
                    name: 'new_values',
                    type: 'Json',
                    isOptional: true
                },
                metadata: {
                    name: 'metadata',
                    type: 'Json',
                    isOptional: true
                },
                severity: {
                    name: 'severity',
                    type: 'String'
                },
                created_at: {
                    name: 'created_at',
                    type: 'DateTime',
                    isOptional: true,
                    attributes: [{ name: '@default', args: [] }]
                }
            },
            uniqueConstraints: {
                id: {
                    name: 'id',
                    fields: ['id']
                }
            }
        },
        subscriptions: {
            name: 'subscriptions',
            fields: {
                id: {
                    name: 'id',
                    type: 'String',
                    isId: true,
                    attributes: [{ name: '@default', args: [] }]
                },
                user_id: {
                    name: 'user_id',
                    type: 'String',
                    isOptional: true
                },
                product_id: {
                    name: 'product_id',
                    type: 'String'
                },
                subscription_status: {
                    name: 'subscription_status',
                    type: 'String'
                },
                subscription_type: {
                    name: 'subscription_type',
                    type: 'String'
                },
                subscription_start_date: {
                    name: 'subscription_start_date',
                    type: 'DateTime',
                    isOptional: true
                },
                subscription_end_date: {
                    name: 'subscription_end_date',
                    type: 'DateTime',
                    isOptional: true
                },
                stripe_subscription_id: {
                    name: 'stripe_subscription_id',
                    type: 'String',
                    isOptional: true
                },
                stripe_customer_id: {
                    name: 'stripe_customer_id',
                    type: 'String',
                    isOptional: true
                },
                stripe_product_id: {
                    name: 'stripe_product_id',
                    type: 'String',
                    isOptional: true
                },
                stripe_price_id: {
                    name: 'stripe_price_id',
                    type: 'String',
                    isOptional: true
                },
                stripe_price_amount: {
                    name: 'stripe_price_amount',
                    type: 'Decimal',
                    isOptional: true
                },
                stripe_price_currency: {
                    name: 'stripe_price_currency',
                    type: 'String',
                    isOptional: true
                },
                stripe_price_interval: {
                    name: 'stripe_price_interval',
                    type: 'String',
                    isOptional: true
                },
                stripe_price_usage_type: {
                    name: 'stripe_price_usage_type',
                    type: 'String',
                    isOptional: true
                },
                created_at: {
                    name: 'created_at',
                    type: 'DateTime',
                    isOptional: true,
                    attributes: [{ name: '@default', args: [] }]
                },
                updated_at: {
                    name: 'updated_at',
                    type: 'DateTime',
                    isOptional: true,
                    attributes: [{ name: '@default', args: [] }]
                },
                active_until: {
                    name: 'active_until',
                    type: 'DateTime',
                    isOptional: true
                }
            },
            uniqueConstraints: {
                id: {
                    name: 'id',
                    fields: ['id']
                },
                user_id_product_id: {
                    name: 'user_id_product_id',
                    fields: ['user_id', 'product_id']
                }
            }
        },
        system_configurations: {
            name: 'system_configurations',
            fields: {
                id: {
                    name: 'id',
                    type: 'String',
                    isId: true,
                    attributes: [{ name: '@default', args: [] }]
                },
                key: {
                    name: 'key',
                    type: 'String'
                },
                value: {
                    name: 'value',
                    type: 'Json'
                },
                description: {
                    name: 'description',
                    type: 'String',
                    isOptional: true
                },
                updated_by: {
                    name: 'updated_by',
                    type: 'String',
                    isOptional: true
                },
                updated_at: {
                    name: 'updated_at',
                    type: 'DateTime',
                    isOptional: true,
                    attributes: [{ name: '@default', args: [] }]
                }
            },
            uniqueConstraints: {
                id: {
                    name: 'id',
                    fields: ['id']
                },
                key: {
                    name: 'key',
                    fields: ['key']
                }
            }
        },
        user_activity_logs: {
            name: 'user_activity_logs',
            fields: {
                id: {
                    name: 'id',
                    type: 'String',
                    isId: true,
                    attributes: [{ name: '@default', args: [] }]
                },
                user_id: {
                    name: 'user_id',
                    type: 'String',
                    isOptional: true
                },
                action: {
                    name: 'action',
                    type: 'String'
                },
                entity: {
                    name: 'entity',
                    type: 'String'
                },
                entity_id: {
                    name: 'entity_id',
                    type: 'String',
                    isOptional: true
                },
                details: {
                    name: 'details',
                    type: 'Json',
                    isOptional: true
                },
                ip_address: {
                    name: 'ip_address',
                    type: 'String',
                    isOptional: true
                },
                user_agent: {
                    name: 'user_agent',
                    type: 'String',
                    isOptional: true
                },
                created_at: {
                    name: 'created_at',
                    type: 'DateTime',
                    isOptional: true,
                    attributes: [{ name: '@default', args: [] }]
                }
            },
            uniqueConstraints: {
                id: {
                    name: 'id',
                    fields: ['id']
                }
            }
        },
        user_profiles: {
            name: 'user_profiles',
            fields: {
                id: {
                    name: 'id',
                    type: 'String',
                    isId: true
                },
                first_name: {
                    name: 'first_name',
                    type: 'String',
                    isOptional: true
                },
                last_name: {
                    name: 'last_name',
                    type: 'String',
                    isOptional: true
                },
                email: {
                    name: 'email',
                    type: 'String'
                },
                phone: {
                    name: 'phone',
                    type: 'String',
                    isOptional: true
                },
                avatar_url: {
                    name: 'avatar_url',
                    type: 'String',
                    isOptional: true
                },
                company_name: {
                    name: 'company_name',
                    type: 'String',
                    isOptional: true
                },
                company_position: {
                    name: 'company_position',
                    type: 'String',
                    isOptional: true
                },
                timezone: {
                    name: 'timezone',
                    type: 'String',
                    isOptional: true,
                    attributes: [
                        { name: '@default', args: [{ value: 'UTC' }] }
                    ]
                },
                notification_preferences: {
                    name: 'notification_preferences',
                    type: 'Json',
                    isOptional: true,
                    attributes: [
                        { name: '@default', args: [{ value: '{}' }] }
                    ]
                },
                last_login_at: {
                    name: 'last_login_at',
                    type: 'DateTime',
                    isOptional: true
                },
                last_login_ip: {
                    name: 'last_login_ip',
                    type: 'String',
                    isOptional: true
                },
                created_at: {
                    name: 'created_at',
                    type: 'DateTime',
                    isOptional: true,
                    attributes: [{ name: '@default', args: [] }]
                },
                updated_at: {
                    name: 'updated_at',
                    type: 'DateTime',
                    isOptional: true,
                    attributes: [{ name: '@default', args: [] }]
                },
                auth_user: {
                    name: 'auth_user',
                    type: 'String'
                },
                property_id: {
                    name: 'property_id',
                    type: 'String',
                    isOptional: true
                },
                tenant_id: {
                    name: 'tenant_id',
                    type: 'String',
                    isOptional: true
                },
                lease_id: {
                    name: 'lease_id',
                    type: 'String',
                    isOptional: true
                },
                maintenance_request_id: {
                    name: 'maintenance_request_id',
                    type: 'String',
                    isOptional: true
                }
            },
            uniqueConstraints: {
                id: {
                    name: 'id',
                    fields: ['id']
                },
                email: {
                    name: 'email',
                    fields: ['email']
                },
                auth_user: {
                    name: 'auth_user',
                    fields: ['auth_user']
                }
            }
        },
        user_security_settings: {
            name: 'user_security_settings',
            fields: {
                user_id: {
                    name: 'user_id',
                    type: 'String',
                    isId: true
                },
                two_factor_enabled: {
                    name: 'two_factor_enabled',
                    type: 'Boolean',
                    isOptional: true,
                    attributes: [
                        { name: '@default', args: [{ value: false }] }
                    ]
                },
                two_factor_method: {
                    name: 'two_factor_method',
                    type: 'String',
                    isOptional: true
                },
                backup_codes: {
                    name: 'backup_codes',
                    type: 'String',
                    isArray: true
                },
                allowed_ips: {
                    name: 'allowed_ips',
                    type: 'String',
                    isArray: true
                },
                max_sessions: {
                    name: 'max_sessions',
                    type: 'Int',
                    isOptional: true,
                    attributes: [
                        { name: '@default', args: [{ value: 5 }] }
                    ]
                },
                password_expires_at: {
                    name: 'password_expires_at',
                    type: 'DateTime',
                    isOptional: true
                },
                require_password_change: {
                    name: 'require_password_change',
                    type: 'Boolean',
                    isOptional: true,
                    attributes: [
                        { name: '@default', args: [{ value: false }] }
                    ]
                },
                last_password_change: {
                    name: 'last_password_change',
                    type: 'DateTime',
                    isOptional: true
                },
                security_questions: {
                    name: 'security_questions',
                    type: 'Json',
                    isOptional: true
                },
                login_notifications: {
                    name: 'login_notifications',
                    type: 'Boolean',
                    isOptional: true,
                    attributes: [
                        { name: '@default', args: [{ value: true }] }
                    ]
                },
                updated_at: {
                    name: 'updated_at',
                    type: 'DateTime',
                    isOptional: true,
                    attributes: [{ name: '@default', args: [] }]
                }
            },
            uniqueConstraints: {
                user_id: {
                    name: 'user_id',
                    fields: ['user_id']
                }
            }
        },
        user_settings: {
            name: 'user_settings',
            fields: {
                id: {
                    name: 'id',
                    type: 'String',
                    isId: true
                },
                theme: {
                    name: 'theme',
                    type: 'String',
                    isOptional: true,
                    attributes: [
                        {
                            name: '@default',
                            args: [{ value: 'light' }]
                        }
                    ]
                },
                language: {
                    name: 'language',
                    type: 'String',
                    isOptional: true,
                    attributes: [
                        { name: '@default', args: [{ value: 'en' }] }
                    ]
                },
                currency: {
                    name: 'currency',
                    type: 'String',
                    isOptional: true,
                    attributes: [
                        { name: '@default', args: [{ value: 'USD' }] }
                    ]
                },
                date_format: {
                    name: 'date_format',
                    type: 'String',
                    isOptional: true,
                    attributes: [
                        {
                            name: '@default',
                            args: [{ value: 'MM/DD/YYYY' }]
                        }
                    ]
                },
                time_format: {
                    name: 'time_format',
                    type: 'String',
                    isOptional: true,
                    attributes: [
                        { name: '@default', args: [{ value: '12h' }] }
                    ]
                },
                notifications_enabled: {
                    name: 'notifications_enabled',
                    type: 'Boolean',
                    isOptional: true,
                    attributes: [
                        { name: '@default', args: [{ value: true }] }
                    ]
                },
                email_notifications: {
                    name: 'email_notifications',
                    type: 'Boolean',
                    isOptional: true,
                    attributes: [
                        { name: '@default', args: [{ value: true }] }
                    ]
                },
                sms_notifications: {
                    name: 'sms_notifications',
                    type: 'Boolean',
                    isOptional: true,
                    attributes: [
                        { name: '@default', args: [{ value: false }] }
                    ]
                },
                created_at: {
                    name: 'created_at',
                    type: 'DateTime',
                    isOptional: true,
                    attributes: [{ name: '@default', args: [] }]
                },
                updated_at: {
                    name: 'updated_at',
                    type: 'DateTime',
                    isOptional: true,
                    attributes: [{ name: '@default', args: [] }]
                }
            },
            uniqueConstraints: {
                id: {
                    name: 'id',
                    fields: ['id']
                }
            }
        },
        waitlist_attempts: {
            name: 'waitlist_attempts',
            fields: {
                id: {
                    name: 'id',
                    type: 'String',
                    isId: true,
                    attributes: [{ name: '@default', args: [] }]
                },
                identifier: {
                    name: 'identifier',
                    type: 'String'
                },
                created_at: {
                    name: 'created_at',
                    type: 'DateTime',
                    attributes: [{ name: '@default', args: [] }]
                }
            },
            uniqueConstraints: {
                id: {
                    name: 'id',
                    fields: ['id']
                }
            }
        },
        schema_migrations: {
            name: 'schema_migrations',
            fields: {
                version: {
                    name: 'version',
                    type: 'String',
                    isId: true
                }
            },
            uniqueConstraints: {
                version: {
                    name: 'version',
                    fields: ['version']
                }
            }
        },
        verification_tokens: {
            name: 'verification_tokens',
            fields: {
                identifier: {
                    name: 'identifier',
                    type: 'String',
                    isId: true
                },
                token: {
                    name: 'token',
                    type: 'String',
                    isId: true
                },
                expires: {
                    name: 'expires',
                    type: 'DateTime'
                }
            },
            uniqueConstraints: {
                identifier_token: {
                    name: 'identifier_token',
                    fields: ['identifier', 'token']
                }
            }
        },
        organization_members: {
            name: 'organization_members',
            fields: {
                id: {
                    name: 'id',
                    type: 'String',
                    isId: true,
                    attributes: [{ name: '@default', args: [] }]
                },
                created_at: {
                    name: 'created_at',
                    type: 'DateTime',
                    attributes: [{ name: '@default', args: [] }]
                },
                organization_id: {
                    name: 'organization_id',
                    type: 'String',
                    attributes: [{ name: '@default', args: [] }]
                },
                user_id: {
                    name: 'user_id',
                    type: 'String',
                    attributes: [{ name: '@default', args: [] }]
                },
                role: {
                    name: 'role',
                    type: 'String',
                    isOptional: true,
                    attributes: [
                        {
                            name: '@default',
                            args: [{ value: "'member'" }]
                        }
                    ]
                },
                updated_at: {
                    name: 'updated_at',
                    type: 'DateTime',
                    isOptional: true,
                    attributes: [{ name: '@default', args: [] }]
                }
            },
            uniqueConstraints: {
                id: {
                    name: 'id',
                    fields: ['id']
                },
                organization_id: {
                    name: 'organization_id',
                    fields: ['organization_id']
                },
                user_id: {
                    name: 'user_id',
                    fields: ['user_id']
                }
            }
        },
        activity: {
            name: 'activity',
            fields: {
                userId: {
                    name: 'userId',
                    type: 'String',
                    attributes: [{ name: '@default', args: [] }]
                },
                activity_log_id: {
                    name: 'activity_log_id',
                    type: 'String',
                    attributes: [{ name: '@default', args: [] }]
                },
                activity_type: {
                    name: 'activity_type',
                    type: 'ActivityType'
                },
                entityType: {
                    name: 'entityType',
                    type: 'EntityType'
                },
                entityId: {
                    name: 'entityId',
                    type: 'String'
                },
                description: {
                    name: 'description',
                    type: 'String'
                },
                created_at: {
                    name: 'created_at',
                    type: 'DateTime',
                    isOptional: true,
                    attributes: [{ name: '@default', args: [] }]
                },
                updated_at: {
                    name: 'updated_at',
                    type: 'DateTime',
                    isOptional: true,
                    attributes: [{ name: '@default', args: [] }]
                },
                id: {
                    name: 'id',
                    type: 'String',
                    isId: true,
                    attributes: [{ name: '@default', args: [] }]
                }
            },
            uniqueConstraints: {
                id: {
                    name: 'id',
                    fields: ['id']
                }
            }
        },
        adminAuditLog: {
            name: 'AdminAuditLog',
            fields: {
                id: {
                    name: 'id',
                    type: 'String',
                    isId: true,
                    attributes: [{ name: '@default', args: [] }]
                },
                userId: {
                    name: 'userId',
                    type: 'String',
                    isOptional: true
                },
                entityType: {
                    name: 'entityType',
                    type: 'EntityType'
                },
                entityId: {
                    name: 'entityId',
                    type: 'String',
                    isOptional: true
                },
                oldValues: {
                    name: 'oldValues',
                    type: 'Json',
                    isOptional: true
                },
                newValues: {
                    name: 'newValues',
                    type: 'Json',
                    isOptional: true
                },
                ipAddress: {
                    name: 'ipAddress',
                    type: 'String',
                    isOptional: true
                },
                userAgent: {
                    name: 'userAgent',
                    type: 'String',
                    isOptional: true
                },
                created_at: {
                    name: 'created_at',
                    type: 'DateTime',
                    isOptional: true,
                    attributes: [{ name: '@default', args: [] }]
                }
            },
            uniqueConstraints: {
                id: {
                    name: 'id',
                    fields: ['id']
                }
            }
        },
        session: {
            name: 'session',
            fields: {
                id: {
                    name: 'id',
                    type: 'String',
                    isId: true,
                    attributes: [{ name: '@default', args: [] }]
                },
                sessionToken: {
                    name: 'sessionToken',
                    type: 'String'
                },
                user_id: {
                    name: 'user_id',
                    type: 'String',
                    isForeignKey: true,
                    relationField: 'users'
                },
                expires: {
                    name: 'expires',
                    type: 'DateTime'
                },
                users: {
                    name: 'users',
                    type: 'users',
                    isDataModel: true,
                    backLink: 'sessions',
                    isRelationOwner: true,
                    foreignKeyMapping: { id: 'user_id' }
                }
            },
            uniqueConstraints: {
                id: {
                    name: 'id',
                    fields: ['id']
                },
                sessionToken: {
                    name: 'sessionToken',
                    fields: ['sessionToken']
                }
            }
        },
        analytics: {
            name: 'analytics',
            fields: {
                id: {
                    name: 'id',
                    type: 'String',
                    isId: true,
                    attributes: [{ name: '@default', args: [] }]
                },
                created_by: {
                    name: 'created_by',
                    type: 'String'
                },
                created_at: {
                    name: 'created_at',
                    type: 'DateTime',
                    isOptional: true,
                    attributes: [{ name: '@default', args: [] }]
                },
                data: {
                    name: 'data',
                    type: 'Json',
                    isOptional: true,
                    attributes: [
                        { name: '@default', args: [{ value: '{}' }] }
                    ]
                }
            },
            uniqueConstraints: {
                id: {
                    name: 'id',
                    fields: ['id']
                }
            }
        },
        audit_logs: {
            name: 'audit_logs',
            fields: {
                id: {
                    name: 'id',
                    type: 'String',
                    isId: true,
                    attributes: [{ name: '@default', args: [] }]
                },
                performed_by: {
                    name: 'performed_by',
                    type: 'String'
                },
                action: {
                    name: 'action',
                    type: 'String'
                },
                resource_type: {
                    name: 'resource_type',
                    type: 'String'
                },
                resource_id: {
                    name: 'resource_id',
                    type: 'String',
                    isOptional: true
                },
                created_at: {
                    name: 'created_at',
                    type: 'DateTime',
                    isOptional: true,
                    attributes: [{ name: '@default', args: [] }]
                },
                details: {
                    name: 'details',
                    type: 'Json',
                    isOptional: true,
                    attributes: [
                        { name: '@default', args: [{ value: '{}' }] }
                    ]
                }
            },
            uniqueConstraints: {
                id: {
                    name: 'id',
                    fields: ['id']
                }
            }
        },
        settings: {
            name: 'settings',
            fields: {
                key: {
                    name: 'key',
                    type: 'String',
                    isId: true
                },
                value: {
                    name: 'value',
                    type: 'Json'
                },
                updated_by: {
                    name: 'updated_by',
                    type: 'String'
                },
                updated_at: {
                    name: 'updated_at',
                    type: 'DateTime',
                    isOptional: true,
                    attributes: [{ name: '@default', args: [] }]
                },
                description: {
                    name: 'description',
                    type: 'String',
                    isOptional: true
                }
            },
            uniqueConstraints: {
                key: {
                    name: 'key',
                    fields: ['key']
                }
            }
        },
        inspections: {
            name: 'inspections',
            fields: {
                id: {
                    name: 'id',
                    type: 'String',
                    isId: true,
                    attributes: [{ name: '@default', args: [] }]
                },
                property_id: {
                    name: 'property_id',
                    type: 'String',
                    isForeignKey: true,
                    relationField: 'property'
                },
                user_id: {
                    name: 'user_id',
                    type: 'String',
                    isForeignKey: true,
                    relationField: 'user'
                },
                inspection_type: {
                    name: 'inspection_type',
                    type: 'String'
                },
                status: {
                    name: 'status',
                    type: 'String',
                    attributes: [
                        {
                            name: '@default',
                            args: [{ value: 'SCHEDULED' }]
                        }
                    ]
                },
                scheduled_date: {
                    name: 'scheduled_date',
                    type: 'DateTime'
                },
                completed_date: {
                    name: 'completed_date',
                    type: 'DateTime',
                    isOptional: true
                },
                inspector_name: {
                    name: 'inspector_name',
                    type: 'String'
                },
                findings: {
                    name: 'findings',
                    type: 'Json',
                    isOptional: true,
                    attributes: [
                        { name: '@default', args: [{ value: '[]' }] }
                    ]
                },
                notes: {
                    name: 'notes',
                    type: 'String',
                    isOptional: true
                },
                report_url: {
                    name: 'report_url',
                    type: 'String',
                    isOptional: true
                },
                created_at: {
                    name: 'created_at',
                    type: 'DateTime',
                    attributes: [{ name: '@default', args: [] }]
                },
                updated_at: {
                    name: 'updated_at',
                    type: 'DateTime',
                    attributes: [{ name: '@default', args: [] }]
                },
                property: {
                    name: 'property',
                    type: 'properties',
                    isDataModel: true,
                    backLink: 'inspections',
                    isRelationOwner: true,
                    foreignKeyMapping: { id: 'property_id' }
                },
                user: {
                    name: 'user',
                    type: 'users',
                    isDataModel: true,
                    backLink: 'inspections',
                    isRelationOwner: true,
                    foreignKeyMapping: { id: 'user_id' }
                }
            },
            uniqueConstraints: {
                id: {
                    name: 'id',
                    fields: ['id']
                }
            }
        },
        vendors: {
            name: 'vendors',
            fields: {
                id: {
                    name: 'id',
                    type: 'String',
                    isId: true,
                    attributes: [{ name: '@default', args: [] }]
                },
                user_id: {
                    name: 'user_id',
                    type: 'String',
                    isForeignKey: true,
                    relationField: 'user'
                },
                company_name: {
                    name: 'company_name',
                    type: 'String'
                },
                contact_name: {
                    name: 'contact_name',
                    type: 'String'
                },
                email: {
                    name: 'email',
                    type: 'String'
                },
                phone: {
                    name: 'phone',
                    type: 'String'
                },
                address: {
                    name: 'address',
                    type: 'String',
                    isOptional: true
                },
                services: {
                    name: 'services',
                    type: 'String',
                    isArray: true
                },
                rate: {
                    name: 'rate',
                    type: 'Decimal',
                    isOptional: true
                },
                rating: {
                    name: 'rating',
                    type: 'Int',
                    isOptional: true
                },
                status: {
                    name: 'status',
                    type: 'String',
                    attributes: [
                        {
                            name: '@default',
                            args: [{ value: 'ACTIVE' }]
                        }
                    ]
                },
                insurance_info: {
                    name: 'insurance_info',
                    type: 'Json',
                    isOptional: true
                },
                license_info: {
                    name: 'license_info',
                    type: 'Json',
                    isOptional: true
                },
                notes: {
                    name: 'notes',
                    type: 'String',
                    isOptional: true
                },
                created_at: {
                    name: 'created_at',
                    type: 'DateTime',
                    attributes: [{ name: '@default', args: [] }]
                },
                updated_at: {
                    name: 'updated_at',
                    type: 'DateTime',
                    attributes: [{ name: '@default', args: [] }]
                },
                user: {
                    name: 'user',
                    type: 'users',
                    isDataModel: true,
                    backLink: 'vendors',
                    isRelationOwner: true,
                    foreignKeyMapping: { id: 'user_id' }
                },
                work_orders: {
                    name: 'work_orders',
                    type: 'work_orders',
                    isDataModel: true,
                    isArray: true,
                    backLink: 'vendor'
                }
            },
            uniqueConstraints: {
                id: {
                    name: 'id',
                    fields: ['id']
                }
            }
        },
        work_orders: {
            name: 'work_orders',
            fields: {
                id: {
                    name: 'id',
                    type: 'String',
                    isId: true,
                    attributes: [{ name: '@default', args: [] }]
                },
                vendor_id: {
                    name: 'vendor_id',
                    type: 'String',
                    isForeignKey: true,
                    relationField: 'vendor'
                },
                property_id: {
                    name: 'property_id',
                    type: 'String',
                    isForeignKey: true,
                    relationField: 'property'
                },
                maintenance_id: {
                    name: 'maintenance_id',
                    type: 'String',
                    isOptional: true
                },
                title: {
                    name: 'title',
                    type: 'String'
                },
                description: {
                    name: 'description',
                    type: 'String'
                },
                priority: {
                    name: 'priority',
                    type: 'String',
                    attributes: [
                        { name: '@default', args: [{ value: 'LOW' }] }
                    ]
                },
                status: {
                    name: 'status',
                    type: 'String',
                    attributes: [
                        {
                            name: '@default',
                            args: [{ value: 'PENDING' }]
                        }
                    ]
                },
                scheduled_date: {
                    name: 'scheduled_date',
                    type: 'DateTime'
                },
                completed_date: {
                    name: 'completed_date',
                    type: 'DateTime',
                    isOptional: true
                },
                estimated_cost: {
                    name: 'estimated_cost',
                    type: 'Decimal',
                    isOptional: true
                },
                actual_cost: {
                    name: 'actual_cost',
                    type: 'Decimal',
                    isOptional: true
                },
                notes: {
                    name: 'notes',
                    type: 'String',
                    isOptional: true
                },
                created_at: {
                    name: 'created_at',
                    type: 'DateTime',
                    attributes: [{ name: '@default', args: [] }]
                },
                updated_at: {
                    name: 'updated_at',
                    type: 'DateTime',
                    attributes: [{ name: '@default', args: [] }]
                },
                user_id: {
                    name: 'user_id',
                    type: 'String',
                    isForeignKey: true,
                    relationField: 'user'
                },
                property: {
                    name: 'property',
                    type: 'properties',
                    isDataModel: true,
                    backLink: 'work_orders',
                    isRelationOwner: true,
                    foreignKeyMapping: { id: 'property_id' }
                },
                user: {
                    name: 'user',
                    type: 'users',
                    isDataModel: true,
                    backLink: 'work_orders',
                    isRelationOwner: true,
                    foreignKeyMapping: { id: 'user_id' }
                },
                vendor: {
                    name: 'vendor',
                    type: 'vendors',
                    isDataModel: true,
                    backLink: 'work_orders',
                    isRelationOwner: true,
                    foreignKeyMapping: { id: 'vendor_id' }
                }
            },
            uniqueConstraints: {
                id: {
                    name: 'id',
                    fields: ['id']
                }
            }
        },
        waitlist: {
            name: 'waitlist',
            fields: {
                id: {
                    name: 'id',
                    type: 'String',
                    isId: true,
                    attributes: [{ name: '@default', args: [] }]
                },
                email: {
                    name: 'email',
                    type: 'String'
                },
                position: {
                    name: 'position',
                    type: 'Int'
                },
                status: {
                    name: 'status',
                    type: 'String',
                    attributes: [
                        {
                            name: '@default',
                            args: [{ value: 'pending' }]
                        }
                    ]
                },
                referral_code: {
                    name: 'referral_code',
                    type: 'String'
                },
                referred_by: {
                    name: 'referred_by',
                    type: 'String',
                    isOptional: true
                },
                created_at: {
                    name: 'created_at',
                    type: 'DateTime',
                    isOptional: true,
                    attributes: [{ name: '@default', args: [] }]
                },
                updated_at: {
                    name: 'updated_at',
                    type: 'DateTime',
                    isOptional: true,
                    attributes: [{ name: '@default', args: [] }]
                },
                events: {
                    name: 'events',
                    type: 'waitlist_events',
                    isDataModel: true,
                    isArray: true,
                    backLink: 'waitlist'
                }
            },
            uniqueConstraints: {
                id: {
                    name: 'id',
                    fields: ['id']
                },
                email: {
                    name: 'email',
                    fields: ['email']
                },
                referral_code: {
                    name: 'referral_code',
                    fields: ['referral_code']
                }
            }
        },
        waitlist_events: {
            name: 'waitlist_events',
            fields: {
                id: {
                    name: 'id',
                    type: 'String',
                    isId: true,
                    attributes: [{ name: '@default', args: [] }]
                },
                email: {
                    name: 'email',
                    type: 'String',
                    isForeignKey: true,
                    relationField: 'waitlist'
                },
                type: {
                    name: 'type',
                    type: 'String'
                },
                metadata: {
                    name: 'metadata',
                    type: 'Json',
                    isOptional: true
                },
                timestamp: {
                    name: 'timestamp',
                    type: 'DateTime',
                    isOptional: true,
                    attributes: [{ name: '@default', args: [] }]
                },
                waitlist: {
                    name: 'waitlist',
                    type: 'waitlist',
                    isDataModel: true,
                    backLink: 'events',
                    isRelationOwner: true,
                    foreignKeyMapping: { email: 'email' }
                }
            },
            uniqueConstraints: {
                id: {
                    name: 'id',
                    fields: ['id']
                }
            }
        },
        public_audit_logs: {
            name: 'public_audit_logs',
            fields: {
                id: {
                    name: 'id',
                    type: 'String',
                    isId: true,
                    attributes: [{ name: '@default', args: [] }]
                },
                user_id: {
                    name: 'user_id',
                    type: 'String',
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'users'
                },
                action: {
                    name: 'action',
                    type: 'String'
                },
                table_name: {
                    name: 'table_name',
                    type: 'String'
                },
                record_id: {
                    name: 'record_id',
                    type: 'String'
                },
                old_data: {
                    name: 'old_data',
                    type: 'Json',
                    isOptional: true
                },
                new_data: {
                    name: 'new_data',
                    type: 'Json',
                    isOptional: true
                },
                ip_address: {
                    name: 'ip_address',
                    type: 'String',
                    isOptional: true
                },
                created_at: {
                    name: 'created_at',
                    type: 'DateTime',
                    isOptional: true,
                    attributes: [{ name: '@default', args: [] }]
                },
                users: {
                    name: 'users',
                    type: 'users',
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'audit_logs',
                    isRelationOwner: true,
                    foreignKeyMapping: { id: 'user_id' }
                }
            },
            uniqueConstraints: {
                id: {
                    name: 'id',
                    fields: ['id']
                }
            }
        },
        email_addresses: {
            name: 'email_addresses',
            fields: {
                id: {
                    name: 'id',
                    type: 'String',
                    isId: true,
                    attributes: [{ name: '@default', args: [] }]
                },
                email_address: {
                    name: 'email_address',
                    type: 'String'
                },
                user_id: {
                    name: 'user_id',
                    type: 'String',
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'users'
                },
                verified: {
                    name: 'verified',
                    type: 'Boolean',
                    isOptional: true,
                    attributes: [
                        { name: '@default', args: [{ value: false }] }
                    ]
                },
                created_at: {
                    name: 'created_at',
                    type: 'DateTime',
                    isOptional: true,
                    attributes: [{ name: '@default', args: [] }]
                },
                updated_at: {
                    name: 'updated_at',
                    type: 'DateTime',
                    isOptional: true,
                    attributes: [{ name: '@default', args: [] }]
                },
                users: {
                    name: 'users',
                    type: 'users',
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'email_addresses',
                    isRelationOwner: true,
                    foreignKeyMapping: { id: 'user_id' }
                }
            },
            uniqueConstraints: {
                id: {
                    name: 'id',
                    fields: ['id']
                },
                email_address: {
                    name: 'email_address',
                    fields: ['email_address']
                }
            }
        },
        invoice_items: {
            name: 'invoice_items',
            fields: {
                id: {
                    name: 'id',
                    type: 'String',
                    isId: true,
                    attributes: [{ name: '@default', args: [] }]
                },
                invoice_id: {
                    name: 'invoice_id',
                    type: 'String',
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'invoices'
                },
                description: {
                    name: 'description',
                    type: 'String'
                },
                amount: {
                    name: 'amount',
                    type: 'Decimal'
                },
                quantity: {
                    name: 'quantity',
                    type: 'Int',
                    isOptional: true,
                    attributes: [
                        { name: '@default', args: [{ value: 1 }] }
                    ]
                },
                created_at: {
                    name: 'created_at',
                    type: 'DateTime',
                    isOptional: true,
                    attributes: [{ name: '@default', args: [] }]
                },
                invoices: {
                    name: 'invoices',
                    type: 'invoices',
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'invoice_items',
                    isRelationOwner: true,
                    foreignKeyMapping: { id: 'invoice_id' }
                }
            },
            uniqueConstraints: {
                id: {
                    name: 'id',
                    fields: ['id']
                }
            }
        },
        invoices: {
            name: 'invoices',
            fields: {
                id: {
                    name: 'id',
                    type: 'String',
                    isId: true,
                    attributes: [{ name: '@default', args: [] }]
                },
                customer_id: {
                    name: 'customer_id',
                    type: 'String',
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'users'
                },
                amount: {
                    name: 'amount',
                    type: 'Decimal'
                },
                status: {
                    name: 'status',
                    type: 'invoice_status',
                    isOptional: true,
                    attributes: [{ name: '@default', args: [] }]
                },
                due_date: {
                    name: 'due_date',
                    type: 'DateTime'
                },
                created_at: {
                    name: 'created_at',
                    type: 'DateTime',
                    isOptional: true,
                    attributes: [{ name: '@default', args: [] }]
                },
                updated_at: {
                    name: 'updated_at',
                    type: 'DateTime',
                    isOptional: true,
                    attributes: [{ name: '@default', args: [] }]
                },
                invoice_items: {
                    name: 'invoice_items',
                    type: 'invoice_items',
                    isDataModel: true,
                    isArray: true,
                    backLink: 'invoices'
                },
                users: {
                    name: 'users',
                    type: 'users',
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'invoices',
                    isRelationOwner: true,
                    foreignKeyMapping: { id: 'customer_id' }
                }
            },
            uniqueConstraints: {
                id: {
                    name: 'id',
                    fields: ['id']
                }
            }
        },
        payment_methods: {
            name: 'payment_methods',
            fields: {
                id: {
                    name: 'id',
                    type: 'String',
                    isId: true,
                    attributes: [{ name: '@default', args: [] }]
                },
                user_id: {
                    name: 'user_id',
                    type: 'String',
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'users'
                },
                type: {
                    name: 'type',
                    type: 'payment_method_type'
                },
                last4: {
                    name: 'last4',
                    type: 'String'
                },
                brand: {
                    name: 'brand',
                    type: 'String',
                    isOptional: true
                },
                exp_month: {
                    name: 'exp_month',
                    type: 'Int',
                    isOptional: true
                },
                exp_year: {
                    name: 'exp_year',
                    type: 'Int',
                    isOptional: true
                },
                is_default: {
                    name: 'is_default',
                    type: 'Boolean',
                    isOptional: true,
                    attributes: [
                        { name: '@default', args: [{ value: false }] }
                    ]
                },
                created_at: {
                    name: 'created_at',
                    type: 'DateTime',
                    isOptional: true,
                    attributes: [{ name: '@default', args: [] }]
                },
                users: {
                    name: 'users',
                    type: 'users',
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'payment_methods',
                    isRelationOwner: true,
                    foreignKeyMapping: { id: 'user_id' }
                },
                transactions: {
                    name: 'transactions',
                    type: 'transactions',
                    isDataModel: true,
                    isArray: true,
                    backLink: 'payment_methods'
                }
            },
            uniqueConstraints: {
                id: {
                    name: 'id',
                    fields: ['id']
                }
            }
        },
        secrets: {
            name: 'secrets',
            fields: {
                key: {
                    name: 'key',
                    type: 'String',
                    isId: true
                },
                value: {
                    name: 'value',
                    type: 'String'
                },
                created_at: {
                    name: 'created_at',
                    type: 'DateTime',
                    isOptional: true,
                    attributes: [{ name: '@default', args: [] }]
                }
            },
            uniqueConstraints: {
                key: {
                    name: 'key',
                    fields: ['key']
                }
            }
        },
        stripe_webhook_events: {
            name: 'stripe_webhook_events',
            fields: {
                id: {
                    name: 'id',
                    type: 'String',
                    isId: true
                },
                type: {
                    name: 'type',
                    type: 'String'
                },
                data: {
                    name: 'data',
                    type: 'Json',
                    isOptional: true
                },
                created_at: {
                    name: 'created_at',
                    type: 'DateTime',
                    isOptional: true,
                    attributes: [{ name: '@default', args: [] }]
                }
            },
            uniqueConstraints: {
                id: {
                    name: 'id',
                    fields: ['id']
                }
            }
        },
        teams: {
            name: 'teams',
            fields: {
                id: {
                    name: 'id',
                    type: 'String',
                    isId: true,
                    attributes: [{ name: '@default', args: [] }]
                },
                name: {
                    name: 'name',
                    type: 'String'
                },
                stripe_customer_id: {
                    name: 'stripe_customer_id',
                    type: 'String',
                    isOptional: true
                },
                stripe_product_id: {
                    name: 'stripe_product_id',
                    type: 'String',
                    isOptional: true
                },
                stripe_subscription_id: {
                    name: 'stripe_subscription_id',
                    type: 'String',
                    isOptional: true
                },
                plan_name: {
                    name: 'plan_name',
                    type: 'String',
                    isOptional: true
                },
                subscription_status: {
                    name: 'subscription_status',
                    type: 'subscription_status',
                    isOptional: true,
                    attributes: [{ name: '@default', args: [] }]
                },
                created_at: {
                    name: 'created_at',
                    type: 'DateTime',
                    isOptional: true,
                    attributes: [{ name: '@default', args: [] }]
                },
                updated_at: {
                    name: 'updated_at',
                    type: 'DateTime',
                    isOptional: true,
                    attributes: [{ name: '@default', args: [] }]
                }
            },
            uniqueConstraints: {
                id: {
                    name: 'id',
                    fields: ['id']
                }
            }
        },
        transactions: {
            name: 'transactions',
            fields: {
                id: {
                    name: 'id',
                    type: 'String',
                    isId: true,
                    attributes: [{ name: '@default', args: [] }]
                },
                user_id: {
                    name: 'user_id',
                    type: 'String',
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'users'
                },
                amount: {
                    name: 'amount',
                    type: 'Decimal'
                },
                currency: {
                    name: 'currency',
                    type: 'String',
                    isOptional: true,
                    attributes: [
                        { name: '@default', args: [{ value: 'USD' }] }
                    ]
                },
                status: {
                    name: 'status',
                    type: 'payment_status',
                    isOptional: true,
                    attributes: [{ name: '@default', args: [] }]
                },
                payment_method_id: {
                    name: 'payment_method_id',
                    type: 'String',
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'payment_methods'
                },
                description: {
                    name: 'description',
                    type: 'String',
                    isOptional: true
                },
                metadata: {
                    name: 'metadata',
                    type: 'Json',
                    isOptional: true,
                    attributes: [
                        { name: '@default', args: [{ value: '{}' }] }
                    ]
                },
                created_at: {
                    name: 'created_at',
                    type: 'DateTime',
                    isOptional: true,
                    attributes: [{ name: '@default', args: [] }]
                },
                payment_methods: {
                    name: 'payment_methods',
                    type: 'payment_methods',
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'transactions',
                    isRelationOwner: true,
                    foreignKeyMapping: { id: 'payment_method_id' }
                },
                users: {
                    name: 'users',
                    type: 'users',
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'transactions',
                    isRelationOwner: true,
                    foreignKeyMapping: { id: 'user_id' }
                }
            },
            uniqueConstraints: {
                id: {
                    name: 'id',
                    fields: ['id']
                }
            }
        },
        units: {
            name: 'units',
            fields: {
                id: {
                    name: 'id',
                    type: 'String',
                    isId: true,
                    attributes: [{ name: '@default', args: [] }]
                },
                property_id: {
                    name: 'property_id',
                    type: 'String',
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'properties'
                },
                number: {
                    name: 'number',
                    type: 'String'
                },
                status: {
                    name: 'status',
                    type: 'unit_status',
                    isOptional: true,
                    attributes: [{ name: '@default', args: [] }]
                },
                type: {
                    name: 'type',
                    type: 'String'
                },
                rent: {
                    name: 'rent',
                    type: 'Decimal'
                },
                lease_id: {
                    name: 'lease_id',
                    type: 'String',
                    isOptional: true
                },
                created_at: {
                    name: 'created_at',
                    type: 'DateTime',
                    isOptional: true,
                    attributes: [{ name: '@default', args: [] }]
                },
                updated_at: {
                    name: 'updated_at',
                    type: 'DateTime',
                    isOptional: true,
                    attributes: [{ name: '@default', args: [] }]
                },
                properties: {
                    name: 'properties',
                    type: 'properties',
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'units',
                    isRelationOwner: true,
                    foreignKeyMapping: { id: 'property_id' }
                }
            },
            uniqueConstraints: {
                id: {
                    name: 'id',
                    fields: ['id']
                }
            }
        }
    },
    deleteCascade: {
        users: ['email_addresses'],
        properties: ['units'],
        invoices: ['invoice_items']
    }
}
export default metadata
